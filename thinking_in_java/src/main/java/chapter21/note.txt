21.1 并发的多面性


21.2 基本的线程机制
    单个进程可以拥有多个并发执行的任务，底层机制是切分CPU时间
    21.2.1 定义任务
        线程可以驱动任务。 实现Runnable接口并编写run()方法
        当从Runnable导出一个类时，它必须具有run()方法。要实现线程行为，必须显式地将一个任务附着到线程上
    21.2.2 Thread类
    21.2.3 使用Executor
        执行器 管理Thread对象
    21.2.4 从任务中产生返回值
        Runnable是执行工作的独立任务，但是它不返回任何值。若希望任务在完成时能够返回一个值，那么可以实现Callable接口
        Callable是一个具有参数类型的泛型，它的参数类型表示的是从方法call()中返回的值
        必须使用ExecutorService.submit()方法调用它
